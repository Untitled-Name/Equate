body {
  margin: 0;
  background-color: #D9EDDF;
  font-size: 16px;
  overflow: hidden;
  font-family: 'Open Sans', sans-serif;
}

.grid-container {
  display: grid;
}

.flex-container {
  display: flex;
}

.column {
  flex-direction: column;
}

.flex-center {
  align-items: center;
}

.buttons {
  all: unset;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 24rem;
  height: 4.5rem;
  border-radius: 10px;
  cursor: pointer;
  box-shadow: inset 0px 0px 7px -2px rgba(0, 0, 0, 0.50);
}

.descriptionMenu {
  flex-direction: row;
  height: 4rem;
  width: 80vw;
  gap: 2rem;
}

.hide {
  display: none;
}


/* TITLE SCREEN */

#titleScreen {
  height: 300vh;
  justify-content: center;
}

.titleContainer {
  height: 100vh;
  grid-template-rows: 30% 70%;
}

.titleContainerAnim {
  animation: fadeIn 1.5s;
  animation-delay: 0.5s;
  animation-fill-mode: both;
}

h1 {
  font-family: 'Source Code Pro', monospace;
  font-size: 6.5rem;
  box-shadow: 0px 15px 13px -19px rgba(0, 0, 0, 0.5);
}

.buttonsContainer {
  justify-items: center;
  gap: 1.2rem;
}

.buttonsAnim {
  animation: fadeIn 1.5s;
  animation-delay: 2s;
  animation-fill-mode: both;
}

.buttons.titleButtons {
  background-color: #5098C8;
}

.buttons.titleButtons:hover {
  background-color: #3b7296;
}

.buttonText {
  font-size: 2rem;
  font-weight: 400;
  color: white;
}

#buttonDisabler {
  position: absolute;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw;
  z-index: 1000;
}

.disableElem {
  display: none;
}


/* ANIMATIONS */

.flyOut {
  animation: flyOut 0.6s;
  animation-fill-mode: forwards;
}

.flyIn {
  animation: flyIn 0.6s;
  animation-fill-mode: forwards;
}

.flyInRev {
  animation: flyInRev 0.6s;
  animation-fill-mode: forwards;
}

.flyOutRev {
  animation: flyOutRev 0.6s;
  animation-fill-mode: forwards;
}

.flyOutRevAlt {
  animation: flyOutRevAlt 0.6s;
  animation-fill-mode: forwards;
}

.inFromRight {
  animation: inFromRight 0.6s;
  animation-fill-mode: forwards;
}

.outToLeft {
  animation: outToleft 0.6s;
  animation-fill-mode: forwards;
}

.loseHeart {
  animation: loseHeart 0.5s;
  animation-fill-mode: forwards;
}

@keyframes fadeIn {
  0% {opacity: 0}
  100% {opacity: 1}
}

@keyframes flyOut {
  0% {transform: translate(0, -100vh)}
  10% {transform: translate(0, -90vh)}
  20% {transform: translate(0, -85vh)}
  30% {transform: translate(0, -90vh)}
  100% {transform: translate(0, -200vh)}
}

@keyframes flyIn {
  0% {transform: translate(0, 0vh)}
  90% {transform: translate(0, -99vh)}
  100% {transform: translate(0, -100vh)}
}

@keyframes flyInRev {
  0% {transform: translate(0, -200vh)}
  90% {transform: translate(0, -101vh)}
  100% {transform: translate(0, -100vh)}
}

@keyframes flyOutRev {
  0% {transform: translate(0, -100vh)}
  10% {transform: translate(0, -110vh)}
  20% {transform: translate(0, -115vh)}
  30% {transform: translate(0, -110vh)}
  100% {transform: translate(0, 100vh)}
}

@keyframes flyOutRevAlt {
  0% {transform: translate(0, -100vh)}
  10% {transform: translate(0, -110vh)}
  20% {transform: translate(0, -115vh)}
  30% {transform: translate(0, -110vh)}
  100% {transform: translate(0, 0)}
}

@keyframes inFromRight {
  0% {transform: translate(100vw, 0)}
  100% {transform: translate(0, 0)}
}

@keyframes outToleft {
  0% {transform: translate(0, 0)}
  10% {transform: translate(5vw, 0)}
  20% {transform: translate(10vw, 0)}
  30% {transform: translate(5vw, 0)}
  100% {transform: translate(-100vw, 0)}
}

@keyframes loseHeart {
  0% {
    transform: translate(0, 0) rotate(0);
  }
  100% {
    transform: translate(0, 30px) rotate(90deg);
    opacity: 0;
  }
}

.test {
  position: absolute;
  height: 100vh;
  width: 50vh;
  top: 0vh;
  z-index: 1000;
  background-color: red;
}


/* MODE SELECT SCREEN */

#modeScreen {
  height: 300vh;
  justify-content: center;
}

.modeDescription {
  height: 8rem;
  justify-content: center;
  font-size: 1.4rem;
  font-weight: 400;
  margin: 0.5rem 20vw;
}


/* DIFFICULTY SCREEN */

#difficultyScreen {
  height: 300vh;
  justify-content: center;
  background: linear-gradient(180deg, rgba(0,0,0,0) 33%, rgba(102,217,206,1) 66%);
}

.buttons.descriptionButtons {
  background-color: #8BCEFF;
}

.buttons.descriptionButtons:hover {
  background-color: #72aad3;
}


/* SETTINGS SCREEN */

#settingsScreen {
  height: 300vh;
  justify-content: center;
  gap: 3rem;
  background: linear-gradient(180deg, rgba(0,0,0,0) 33%, rgba(0,129,191,1) 66%);
}

.settingsButtons {
  background-color: #5098C8;
}

.buttons.settingsButtons:hover {
  background-color: #3b7296;
}


/* GAME SCREEN */

#gameScreen {
  height: 300vh;
  justify-content: center;
  background-color: rgb(102,217,206);
}

#startContainer {
  gap: 3rem;
}

#gameAndInfoContainer {
  width: 100vw;
}

#topRightContainer {
  position: absolute;
  top: 0;
  right: 0;
  margin: 0.5rem 0.5rem;
}

#livesAndTimerContainer {
  display: flex;
  flex-direction: row;
  gap: 0.4rem;
}

#fullHeart1 {
  position: absolute;
}#fullHeart2 {
  position: absolute;
}#fullHeart3 {
  position: absolute;
}


#gameContainer {
  height: 100vh;
  justify-content: center;
}

#questionContainer {
  color: white;
  font-size: 3rem;
  margin-bottom: 1rem;
}

#answersContainer {
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  align-content: center;
  gap: 1rem;
  height: 45vh;
  width: 60vw;
  margin-bottom: 1rem;
}

.answerButton {
  all: unset;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: 14px;
  cursor: pointer;
  width: 40%;
  height: 40%;
  box-shadow: inset 0px 0px 7px -2px rgba(0, 0, 0, 0.50);
  color: white;
  font-size: 2.2rem;
  background-color: #0081BF;
}

.answerButton:hover {
  background-color: #025d87;
}

#gameOverContainer {
  height: 300vh;
  justify-content: center;
}